@model IEnumerable<MoodTrackerApp.Models.MoodEntry>
@{
    ViewData["Title"] = "Mood Entries";
}
<h1 class="mb-3">Mood Entries</h1>
<a class="btn btn-lg btn-gradient mb-4" asp-action="Create">âž• Add New Entry</a>

<div class="mood-table-wrapper">
    @foreach (var item in Model)
    {
        <div class="mood-card mb-3 p-3">
            <div class="row align-items-center">
                <div class="col-12 col-md-2 fw-bold mood-date">
                    @item.Date.ToString("yyyy-MM-dd")
                </div>
                <div class="col-12 col-md-2 mood-emoji">
                    @item.Mood
                </div>
                <div class="col-12 col-md-8 mood-actions mb-2 mb-md-0">
                    <a class="btn btn-sm btn-gradient" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-sm btn-gradient" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </div>
            </div>
            <div class="row">
                <div class="col-12 pastel-note mt-2">
                    @(item.Note?.Replace("\n","<br>").Length > 120 ?
                         Html.Raw(item.Note?.Replace("\n","<br>").Substring(0, Math.Min(120, item.Note.Length)) + "...") :
                         Html.Raw(item.Note?.Replace("\n","<br>")))
                </div>
            </div>
        </div>
    }
</div>
